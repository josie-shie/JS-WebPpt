{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","result":{"data":{"deck":{"id":"09b8db45-d010-57f5-bea0-e5270d56d2ab","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    className: \"columns is-vcentered\"\n  }, mdx(\"div\", {\n    className: \"column\"\n  }, mdx(Logo, {\n    mdxType: \"Logo\"\n  })), mdx(\"div\", {\n    className: \"column is-four-fifths\"\n  }, mdx(\"h2\", null, \"JavaScript \\u5165\\u9580\\u73ED\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9663\\u5217 Array\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 建立、加入新成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"建立、加入新成員\\\"\": true\n  }), \"const aArray = []\\n\\n// [] <-- 1\\naArray.push(1)\\n\\n// 2 --> []\\naArray.unshift(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"0\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1:1 title=\\\"陣列 - 建立、加入新成員\\\" subtitle=\\\"陣列為有序資料集合，以「常數」來宣告文字字面，索引值「從 0 開始」\\\"\",\n    \"1:1\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"建立、加入新成員\\\"\": true,\n    \"subtitle\": \"\\\"陣列為有序資料集合，以「常數」來宣告文字字面，索引值「從\",\n    \"開始」\\\"\": true\n  }), \"const aArray = []\\n\\n// [] <-- 1\\naArray.push(1)\\n\\n// 2 --> []\\naArray.unshift(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"3:4 title=\\\"陣列 - 建立、加入新成員\\\" subtitle=\\\"從後面加入新成員，原陣列 => [1]\\\"\",\n    \"3:4\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"建立、加入新成員\\\"\": true,\n    \"subtitle\": \"\\\"從後面加入新成員，原陣列\",\n    \"\": \">\",\n    \"[1]\\\"\": true\n  }), \"const aArray = []\\n\\n// [] <-- 1\\naArray.push(1)\\n\\n// 2 --> []\\naArray.unshift(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"6:7 title=\\\"陣列 - 建立、加入新成員\\\" subtitle=\\\"從前面加入新成員，原陣列 => [2, 1]\\\"\",\n    \"6:7\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"建立、加入新成員\\\"\": true,\n    \"subtitle\": \"\\\"從前面加入新成員，原陣列\",\n    \"\": \">\",\n    \"[2,\": true,\n    \"1]\\\"\": true\n  }), \"const aArray = []\\n\\n// [] <-- 1\\naArray.push(1)\\n\\n// 2 --> []\\naArray.unshift(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 頭尾移除成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"頭尾移除成員\\\"\": true\n  }), \"const aArray = [1, 2, 3]\\n\\n// [] -->\\nlet popValue = aArray.pop()\\n\\n// <-- []\\nlet shiftValue = aArray.shift()\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"3:4 title=\\\"陣列 - 頭尾移除成員\\\" subtitle=\\\"從後面移除成員，回傳3。原陣列 => [1, 2]\\\"\",\n    \"3:4\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"頭尾移除成員\\\"\": true,\n    \"subtitle\": \"\\\"從後面移除成員，回傳3。原陣列\",\n    \"\": \">\",\n    \"[1,\": true,\n    \"2]\\\"\": true\n  }), \"const aArray = [1, 2, 3]\\n\\n// [] -->\\nlet popValue = aArray.pop()\\n\\n// <-- []\\nlet shiftValue = aArray.shift()\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"6:7 title=\\\"陣列 - 前後移除\\\" subtitle=\\\"從前面移除成員，回傳1。原陣列 => [2]\\\"\",\n    \"6:7\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"前後移除\\\"\": true,\n    \"subtitle\": \"\\\"從前面移除成員，回傳1。原陣列\",\n    \"\": \">\",\n    \"[2]\\\"\": true\n  }), \"const aArray = [1, 2, 3]\\n\\n// [] -->\\nlet popValue = aArray.pop()\\n\\n// <-- []\\nlet shiftValue = aArray.shift()\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 存取成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"存取成員\\\"\": true\n  }), \"const aArray = [1, 2, 3]\\n\\n// access member\\nconst a = aArray[2]\\n\\n// assign new value\\naArray[2] = 99\\n\\n// destructuring assignment\\nconst [x, y, z] = aArray\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"3:4 title=\\\"陣列 - 存取成員\\\" subtitle=\\\"也是使用方括號([ ])，加入索引值來存取成員的值\\\"\",\n    \"3:4\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"存取成員\\\"\": true,\n    \"subtitle\": \"\\\"也是使用方括號([\",\n    \"])，加入索引值來存取成員的值\\\"\": true\n  }), \"const aArray = [1, 2, 3]\\n\\n// access member\\nconst a = aArray[2]\\n\\n// assign new value\\naArray[2] = 99\\n\\n// destructuring assignment\\nconst [x, y, z] = aArray\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"6:7 title=\\\"陣列 - 存取成員\\\" subtitle=\\\"用指定運算可以改變成員的值\\\"\",\n    \"6:7\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"存取成員\\\"\": true,\n    \"subtitle\": \"\\\"用指定運算可以改變成員的值\\\"\"\n  }), \"const aArray = [1, 2, 3]\\n\\n// access member\\nconst a = aArray[2]\\n\\n// assign new value\\naArray[2] = 99\\n\\n// destructuring assignment\\nconst [x, y, z] = aArray\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"9:10 title=\\\"陣列 - 存取成員\\\" subtitle=\\\"解構賦值(ES6)，把陣列中的資料解開擷取成為獨立變數\\\"\",\n    \"9:10\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"存取成員\\\"\": true,\n    \"subtitle\": \"\\\"解構賦值(ES6)，把陣列中的資料解開擷取成為獨立變數\\\"\"\n  }), \"const aArray = [1, 2, 3]\\n\\n// access member\\nconst a = aArray[2]\\n\\n// assign new value\\naArray[2] = 99\\n\\n// destructuring assignment\\nconst [x, y, z] = aArray\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"範例：對每個成員乘2，最後要得到 [2, 4, 6, 8]\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"範例：對每個成員乘2，最後要得到\",\n    \"[2,\": true,\n    \"4,\": true,\n    \"6,\": true,\n    \"8]\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// for loop\\nfor (let i = 0; i < aArray.length; i++) {\\n  aArray[i] = aArray[i] * 2\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"4,6 title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"⭐ for迴圈都是固定的樣式\\\"\",\n    \"4,6\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"⭐\",\n    \"for迴圈都是固定的樣式\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// for loop\\nfor (let i = 0; i < aArray.length; i++) {\\n  aArray[i] = aArray[i] * 2\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"使用forEach迭代(iteration)，有「依次輪流」之意\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"使用forEach迭代(iteration)，有「依次輪流」之意\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// forEach iteration\\naArray.forEach(function (v, i, array) {\\n  array[i] = v * 2\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"4,6 title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"每個成員的值、索引，會依序在這區塊裡面被執行\\\"\",\n    \"4,6\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"每個成員的值、索引，會依序在這區塊裡面被執行\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// forEach iteration\\naArray.forEach(function (v, i, array) {\\n  array[i] = v * 2\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"4[16:40],5,6[1] title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"這是一個callback function(回調、回呼函式)\\\"\",\n    \"4[16:40],5,6[1]\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"這是一個callback\",\n    \"function(回調、回呼函式)\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// forEach iteration\\naArray.forEach(function (v, i, array) {\\n  array[i] = v * 2\\n})\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"使用map迭代(iteration)，有「依次輪流」之意\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"使用map迭代(iteration)，有「依次輪流」之意\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// map iteration\\nconst bArray = aArray.map(function (v, i, array) {\\n  return v * 2\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"4,6 title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"map會回傳一個新的陣列\\\"\",\n    \"4,6\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"map會回傳一個新的陣列\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// map iteration\\nconst bArray = aArray.map(function (v, i, array) {\\n  return v * 2\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"4[27:51],5,6[1] title=\\\"陣列 - 對每個成員處理\\\" subtitle=\\\"這是一個callback function(回調、回呼函式)\\\"\",\n    \"4[27:51],5,6[1]\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"對每個成員處理\\\"\": true,\n    \"subtitle\": \"\\\"這是一個callback\",\n    \"function(回調、回呼函式)\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// map iteration\\nconst bArray = aArray.map(function (v, i, array) {\\n  return v * 2\\n})\\n\"))), mdx(\"hr\", null), mdx(\"h4\", null, \"callback \\u662F\\u4EC0\\u9EBC\\uFF1F\"), mdx(\"div\", {\n    style: {\n      padding: '10px 30px',\n      margin: '10px 100px',\n      fontSize: 30\n    },\n    className: \"content\"\n  }, mdx(\"div\", {\n    className: \"notification is-info\"\n  }, \"\\u56DE\\u8ABF\\u6216\\u56DE\\u547C\\u51FD\\u5F0F callback function\\uFF0C\\u5E38\\u7C21\\u7A31\\u70BA callback\\uFF0C \\u300C\\u662F\\u4E00\\u500B\\u51FD\\u5F0F\\u4EE5\\u50B3\\u5165\\u53C3\\u6578\\u503C\\u7684\\u65B9\\u5F0F\\uFF0C\\u50B3\\u905E\\u5230\\u53E6\\u4E00\\u500B\\u51FD\\u5F0F\\u4E2D\\uFF0C\\u6E96\\u5099\\u63A5\\u4E0B\\u4F86\\u8981\\u7E7C\\u7E8C\\u57F7\\u884C\\u300D\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u51FD\\u5F0F(function)\\u5728 JS \\u4E2D\\u6709\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/First-class_function\"\n  }), \"\\u982D\\u7B49\\u51FD\\u5F0F\"), \"\\n\\u8207\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://zh.wikipedia.org/zh-tw/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0\"\n  }), \"\\u9AD8\\u7B49\\u51FD\\u5F0F(HOF)\"), \"\\u7684\\u8A2D\\u8A08\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u8207 JS \\u4E2D\\u4E00\\u7A2E\\u7A0B\\u5F0F\\u78BC\\u7DE8\\u5BEB\\u98A8\\u683C CPS(\\u5EF6\\u7E8C\\u50B3\\u905E\\u98A8\\u683C) \\u6709\\u95DC\\uFF0CCPS \\u4E3B\\u8981\\u662F\\u7528\\u4F86\\u89E3\\u6C7A\\u963B\\u585E\\uFF0C\\u4E5F\\u5C31\\u662F\\u8981\\u9054\\u6210\\u975E\\u963B\\u585E(non-block)\\u3001\\u53EF\\u7570\\u6B65(asnyc)\\u57F7\\u884C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u26A0\\uFE0F \\u4E26\\u975E\\u6240\\u6709\\u7684 callback \\u90FD\\u662F\\u7570\\u6B65\\u57F7\\u884C\\u7684\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8A3B\\uFF1A\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Continuation-passing_style\"\n  }), \"CPS - \\u5EF6\\u7E8C\\u50B3\\u905E\\u98A8\\u683C(Continuation-passing style)\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 拷貝陣列中的成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"拷貝陣列中的成員\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// \\u65B9\\u5F0F\\u4E00\\uFF1AES6 - \\u5C55\\u958B\\u904B\\u7B97\\u7B26\\nconst bArray = [...aArray]\\n\\n// \\u65B9\\u5F0F\\u4E8C\\uFF1Aslice\\nconst cArray = aArray.slice()\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 組合多個陣列為一個\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"組合多個陣列為一個\\\"\": true\n  }), \"const aArray = [1, 2, 3]\\nconst bArray = [99, 100]\\n\\n// \\u7528\\u5C55\\u958B\\u904B\\u7B97\\u5B50\\u70BA\\u6700\\u65B9\\u4FBF\\nconst cArray = [...aArray, ...bArray]\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 清空陣列\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"清空陣列\\\"\": true\n  }), \"// \\u65B9\\u5F0F\\u4E00\\uFF1A\\u4F7F\\u7528length\\u5C6C\\u6027\\nconst aArray = [1, 2, 3, 4]\\naArray.length = 0\\n\\n// \\u65B9\\u5F0F\\u4E8C\\uFF1A\\u76F4\\u63A5\\u6307\\u5B9A\\u7A7A\\u767D\\u9663\\u5217\\n// \\u26A0\\uFE0F \\u6CE8\\u610F\\u8981\\u7528 let \\u5BA3\\u544A\\u624D\\u884C\\nlet bArray = [7, 8, 9, 10]\\nbArray = []\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 尋找成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"尋找成員\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// find index\\nconst index = aArray.findIndex(function (v, i, array) {\\n  return v === 2\\n})\\n\\n// find value\\nconst value = aArray.find(function (v, i, array) {\\n  return v === 2\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"3:6 title=\\\"陣列 - 尋找成員\\\" subtitle=\\\"如果有找到回傳索引，沒找到會回傳 -1\\\"\",\n    \"3:6\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"尋找成員\\\"\": true,\n    \"subtitle\": \"\\\"如果有找到回傳索引，沒找到會回傳\",\n    \"-1\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// find index\\nconst index = aArray.findIndex(function (v, i, array) {\\n  return v === 2\\n})\\n\\n// find value\\nconst value = aArray.find(function (v, i, array) {\\n  return v === 2\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"8:11 title=\\\"陣列 - 尋找成員\\\" subtitle=\\\"如果有找到回傳值，沒找到會回傳 undefined\\\"\",\n    \"8:11\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"尋找成員\\\"\": true,\n    \"subtitle\": \"\\\"如果有找到回傳值，沒找到會回傳\",\n    \"undefined\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// find index\\nconst index = aArray.findIndex(function (v, i, array) {\\n  return v === 2\\n})\\n\\n// find value\\nconst value = aArray.find(function (v, i, array) {\\n  return v === 2\\n})\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 分割一個陣列為多個\\\" subtitle=\\\"結束索引沒給會分割到最後一個，負數-1代表從後面算起第1個\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"分割一個陣列為多個\\\"\": true,\n    \"subtitle\": \"\\\"結束索引沒給會分割到最後一個，負數-1代表從後面算起第1個\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// slice(start, [end(not included)])\\nconst bArray = aArray.slice(0, 2)\\nconst cArray = aArray.slice(1, -1)\\nconst dArray = aArray.slice(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"4 title=\\\"陣列 - 分割一個陣列為多個\\\" subtitle=\\\"得到[1, 2]\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"分割一個陣列為多個\\\"\": true,\n    \"subtitle\": \"\\\"得到[1,\",\n    \"2]\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// slice(start, [end(not included)])\\nconst bArray = aArray.slice(0, 2)\\nconst cArray = aArray.slice(1, -1)\\nconst dArray = aArray.slice(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"5 title=\\\"陣列 - 分割一個陣列為多個\\\" subtitle=\\\"得到[2, 3]\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"分割一個陣列為多個\\\"\": true,\n    \"subtitle\": \"\\\"得到[2,\",\n    \"3]\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// slice(start, [end(not included)])\\nconst bArray = aArray.slice(0, 2)\\nconst cArray = aArray.slice(1, -1)\\nconst dArray = aArray.slice(2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"6\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"6 title=\\\"陣列 - 分割一個陣列為多個\\\" subtitle=\\\"得到[3, 4]\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"分割一個陣列為多個\\\"\": true,\n    \"subtitle\": \"\\\"得到[3,\",\n    \"4]\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// slice(start, [end(not included)])\\nconst bArray = aArray.slice(0, 2)\\nconst cArray = aArray.slice(1, -1)\\nconst dArray = aArray.slice(2)\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 從中移除成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"從中移除成員\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// remove index=1\\nconst bArray = aArray.filter(function (v, i, array) {\\n  return i !== 1\\n})\\n\\n// remove value=3\\nconst cArray = aArray.filter(function (v, i, array) {\\n  return v !== 3\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"3:6 title=\\\"陣列 - 從中移除成員\\\" subtitle=\\\"移除索引值為1的成員，相當於新建立一個陣列不要有索引值1\\\"\",\n    \"3:6\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"從中移除成員\\\"\": true,\n    \"subtitle\": \"\\\"移除索引值為1的成員，相當於新建立一個陣列不要有索引值1\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// remove index=1\\nconst bArray = aArray.filter(function (v, i, array) {\\n  return i !== 1\\n})\\n\\n// remove value=3\\nconst cArray = aArray.filter(function (v, i, array) {\\n  return v !== 3\\n})\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"8:11 title=\\\"陣列 - 從中移除成員\\\" subtitle=\\\"移除值為3的成員，相當於新建立一個陣列不要有值3\\\"\",\n    \"8:11\": true,\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"從中移除成員\\\"\": true,\n    \"subtitle\": \"\\\"移除值為3的成員，相當於新建立一個陣列不要有值3\\\"\"\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// remove index=1\\nconst bArray = aArray.filter(function (v, i, array) {\\n  return i !== 1\\n})\\n\\n// remove value=3\\nconst cArray = aArray.filter(function (v, i, array) {\\n  return v !== 3\\n})\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 從中插入新成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"從中插入新成員\\\"\": true\n  }), \"const aArray = [1, 2, 3, 4]\\n\\n// \\u7BC4\\u4F8B1\\uFF1A\\u5728\\u7D22\\u5F15\\u503C 1 \\u8655\\u63D2\\u5165\\u65B0\\u7684\\u6210\\u54E1 99\\uFF0C\\u5176\\u5B83\\u6210\\u54E1\\u5F80\\u5F8C\\n// \\u5148\\u7528slice\\u5207\\u5272\\u51FA\\u5169\\u500B\\u9663\\u5217\\nconst bArray = aArray.slice(0, 1)\\nconst cArray = aArray.slice(1)\\n\\nconst newArray = [...bArray, 99, ...cArray]\\n\\n// \\u7BC4\\u4F8B1\\uFF1A\\u5728\\u7D22\\u5F15\\u503C 1 \\u8655\\u63D2\\u5165\\u4E00\\u500B\\u9663\\u5217\\u7684\\u4E2D\\u7684\\u503C\\nconst newArray = [...bArray, ...[99, 100, 101], ...cArray]\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 從中插入新成員\\\" subtitle=\\\"直接寫出函式來作這件事\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"從中插入新成員\\\"\": true,\n    \"subtitle\": \"\\\"直接寫出函式來作這件事\\\"\"\n  }), \"// insertItem(aArray, 1, 99)\\nconst insertItem = (arr, index, newItem) => [\\n  ...arr.slice(0, index),\\n  newItem,\\n  ...arr.slice(index),\\n]\\n\\n// insertItems(aArray, 1, [99, 100, 101])\\nconst insertItems = (arr, index, newItems) => [\\n  ...arr.slice(0, index),\\n  ...newItems,\\n  ...arr.slice(index),\\n]\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 排序成員\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"排序成員\\\"\": true\n  }), \"const aArray = [2, 1, 3, 4, 5]\\n\\n// \\u7531\\u5C0F\\u5230\\u5927\\u6392\\u5E8F(\\u53EA\\u91DD\\u5C0D\\u6578\\u5B57)\\naArray.sort(function (a, b) {\\n  return a - b\\n})\\n\\n// \\u7531\\u5927\\u5230\\u5C0F\\u6392\\u5E8F(\\u53EA\\u91DD\\u5C0D\\u6578\\u5B57)\\naArray.sort(function (a, b) {\\n  return b - a\\n})\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"陣列 - 與字串交互應用\\\"\",\n    \"title\": \"\\\"陣列\",\n    \"-\": true,\n    \"與字串交互應用\\\"\": true\n  }), \"const aString = '1,2,3,4,5'\\nconst aArray = myString.split(',')\\n\\nconst bArray = ['a', 'b', 'c']\\nconst bString = bArray.join('-')\\n\"))), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/eyesofkids/js-204/\"\n  }), \"https://github.com/eyesofkids/js-204/\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","id":"09b8db45-d010-57f5-bea0-e5270d56d2ab","slug":"","title":"callback 是什麼？"}},"staticQueryHashes":[]}